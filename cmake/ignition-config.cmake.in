if (@PKG_NAME@_CONFIG_INCLUDED)
  return()
endif()
set(@PKG_NAME@_CONFIG_INCLUDED TRUE)

@PACKAGE_INIT@

if(NOT TARGET @PROJECT_LIBRARY_TARGET_NAME@)
  include("${CMAKE_CURRENT_LIST_DIR}/@cmake_targets_file@")
endif()

list(APPEND @PKG_NAME@_CXX_FLAGS -std=c++14)
if ("${CMAKE_CXX_COMPILER_ID} " MATCHES "Clang ")
  set(@PKG_NAME@_CXX_FLAGS "${@PKG_NAME@_CXX_FLAGS} -stdlib=libc++")
endif ()

# On windows we produce .dll libraries with no prefix
if (WIN32)
 set(CMAKE_FIND_LIBRARY_PREFIXES "")
 set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib" ".dll")
endif()

# Compatibility
# TODO automate adding new libraries to this file
set(@PKG_NAME@_LIBRARIES
  @PROJECT_LIBRARY_TARGET_NAME@
  @PROJECT_LIBRARY_TARGET_NAME@-camera)
set(@PKG_NAME@_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR_FULL@")
set(@PKG_NAME@_LIBRARY_DIRS "@PACKAGE_LIB_INSTALL_DIR@")
set(@PKG_NAME@_LDFLAGS      "-L@PACKAGE_LIB_INSTALL_DIR@")

include(CMakeFindDependencyMacro)
find_dependency(ignition-math4)
find_dependency(ignition-transport3)
find_dependency(ignition-rendering0)
find_dependency(ignition-common0)
find_dependency(SDFormat 6)

